const intCode = [
  1,
  12,
  2,
  3,
  1,
  1,
  2,
  3,
  1,
  3,
  4,
  3,
  1,
  5,
  0,
  3,
  2,
  10,
  1,
  19,
  1,
  5,
  19,
  23,
  1,
  23,
  5,
  27,
  2,
  27,
  10,
  31,
  1,
  5,
  31,
  35,
  2,
  35,
  6,
  39,
  1,
  6,
  39,
  43,
  2,
  13,
  43,
  47,
  2,
  9,
  47,
  51,
  1,
  6,
  51,
  55,
  1,
  55,
  9,
  59,
  2,
  6,
  59,
  63,
  1,
  5,
  63,
  67,
  2,
  67,
  13,
  71,
  1,
  9,
  71,
  75,
  1,
  75,
  9,
  79,
  2,
  79,
  10,
  83,
  1,
  6,
  83,
  87,
  1,
  5,
  87,
  91,
  1,
  6,
  91,
  95,
  1,
  95,
  13,
  99,
  1,
  10,
  99,
  103,
  2,
  6,
  103,
  107,
  1,
  107,
  5,
  111,
  1,
  111,
  13,
  115,
  1,
  115,
  13,
  119,
  1,
  13,
  119,
  123,
  2,
  123,
  13,
  127,
  1,
  127,
  6,
  131,
  1,
  131,
  9,
  135,
  1,
  5,
  135,
  139,
  2,
  139,
  6,
  143,
  2,
  6,
  143,
  147,
  1,
  5,
  147,
  151,
  1,
  151,
  2,
  155,
  1,
  9,
  155,
  0,
  99,
  2,
  14,
  0,
  0
];

const add = (a, b) => a + b;
const multiply = (a, b) => a * b;
const resolveCases = (opcode, firstElement, secondElement, position) => {
  switch (opcode) {
    case 1:
      intCode[position] = add(firstElement, secondElement);
      break;
    case 2:
      intCode[position] = multiply(firstElement, secondElement);
    case 99:
      break;
    default:
      break;
  }
};
const finalResult = () => {
  for (let i = 0; i < intCode.length; i += 4) {
    let opcode = intCode[i];
    let firstElement = intCode[intCode[i + 1]];
    let secondElement = intCode[intCode[i + 2]];
    let position = intCode[i + 3];
    resolveCases(opcode, firstElement, secondElement, position);
  }
  return intCode[0];
};

console.log(finalResult());
